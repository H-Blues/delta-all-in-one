version: "3.2"

services: 
  connector-init:
    image: deltampc/delta-chain-connector:0.8.1
    container_name: connector-init
    volumes: 
      - "./chain-connector:/app/"
    command: "init"
  connector:
    image: deltampc/delta-chain-connector:0.8.1
    container_name: connector
    volumes: 
      - "./chain-connector:/app/"
    command: "run"
    depends_on:
      connector-init:
        condition: service_completed_successfully
    healthcheck:
      test: "(echo >/dev/tcp/localhost/4500) &>/dev/null"
      interval: 10s
      timeout: 20s
      retries: 3
      start_period: 20s

  zk1:
    image: deltampc/delta-zk:0.8.0
    container_name: zk1
    healthcheck:
      test: "(echo >/dev/tcp/localhost/3400) &>/dev/null"
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 2s
  zk2:
    image: deltampc/delta-zk:0.8.0
    container_name: zk2
    healthcheck:
      test: "(echo >/dev/tcp/localhost/3400) &>/dev/null"
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 2s

  node1-init:
    image: deltampc/delta-node:0.8.1
    container_name: node1-init
    volumes:
      - "./delta-node1:/app"
    command: "init"
  node1-data:
    image: deltampc/delta-node:0.8.1
    container_name: node1-data
    volumes:
      - "./delta-node1:/app"
    command: "get-all-data"
    depends_on:
      node1-init:
        condition: service_completed_successfully
  node1:
    image: deltampc/delta-node:0.8.1
    container_name: node1
    volumes:
      - "./delta-node1:/app/"
    depends_on:
      node1-data:
        condition: service_completed_successfully
      connector:
        condition: service_healthy
      zk1:
        condition: service_healthy
    stop_grace_period: 30s
    healthcheck:
      test: "(echo >/dev/tcp/localhost/6700) &>/dev/null"
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s

  node2-init:
    image: deltampc/delta-node:0.8.1
    container_name: node2-init
    volumes:
      - "./delta-node2:/app/"
    command: "init"
  node2-data:
    image: deltampc/delta-node:0.8.1
    container_name: node2-data
    volumes:
      - "./delta-node2:/app/"
    command: "get-all-data"
    depends_on:
      node2-init:
        condition: service_completed_successfully
  node2:
    image: deltampc/delta-node:0.8.1
    container_name: node2
    volumes:
      - "./delta-node2:/app/"
    depends_on:
      node2-data:
        condition: service_completed_successfully
      connector:
        condition: service_healthy
      zk2:
        condition: service_healthy
    stop_grace_period: 30s
    healthcheck:
      test: "(echo >/dev/tcp/localhost/6700) &>/dev/null"
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s

  dashboard-init:
    image: deltampc/deltaboard:0.8.1
    container_name: dashboard-init
    volumes: 
      - "./deltaboard:/app/"
    command: "init"
  dashboard:
    image: deltampc/deltaboard:0.8.1
    container_name: dashboard
    volumes: 
      - "./deltaboard:/app/"
    depends_on: 
      dashboard-init:
        condition: service_completed_successfully
      node1:
        condition: service_healthy
    ports:
      - "8090:8090"